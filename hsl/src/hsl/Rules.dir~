#------------------------------------------------------------------------------
#
# This file specifies the product name and the section name
#
# It is used by the generic section makefile to figure out what to expect.
#
# This file is where the make process edits need to be
#

#
# Directory product name and directory name
#
# Note that DIR_ADDS includes all sources in any directories listed.
# DIR_ADDD only makes sure the directory is available in the output space.
#
DIR_PROD=PacOS
DIR_NAME=hsl
DIR_OFFS=
DIR_MODE=lib
DIR_ADDS=
DIR_ADDD=

DIR_ALLP=
DIR_DEPP=
DIR_FDEP=
DIR_CLNP=

KERNEL_OUT ?= $(KERNEL_SOURCE)

#
# This allows additional objects (such as provided by vendor) to be
# linked with the module directly.
#
OBJ_ADDS=


#
# Adjust so it is relative path to the product top directory
#
SRC_DIR=..
TOP_DIR=../..

ADD_HARDWARE=yes
HARDWARE_NAME=broadcom

ENABLE_BROADCOM=yes
#BROADCOM_SDK := /workspace/bcm53344/iproc/sdk-all-6.5.5

BLD_NAME ?= linux
DIR_MODE=out

MODULE_CFLAGS :=

LINUX_INCLUDE=$(KERNEL_SOURCE)/include
KERNDIR=$(KERNEL_SOURCE)
TOOLCHAIN_BASE_DIR ?= /workspace/bcm53344/iproc
KFLAG_INCLD = $(TOOLCHAIN_BASE_DIR)/buildroot/host/usr/lib/gcc/arm-broadcom-linux-uclibcgnueabi/4.7.2/include

MODULE_CFLAGS += -D__LINUX_ARM_ARCH__=7 -D__KERNEL__ -nostdinc  -isystem $(KFLAG_INCLD) -Wall -Wstrict-prototypes -Wno-trigraphs -Os -fno-strict-aliasing -fno-common -marm -mabi=aapcs-linux -fno-pic -pipe -msoft-float -ffreestanding -march=armv7-a -mfpu=vfp -mfloat-abi=softfp -fomit-frame-pointer -g -fno-stack-protector -Wdeclaration-after-statement -Wno-pointer-sign -mlong-calls

MODULE_CFLAGS+=-I$(KERNDIR)/arch/arm/include/generated -include $(LINUX_INCLUDE)/linux/version.h -include $(LINUX_INCLUDE)/generated/autoconf.h -I$(KERNDIR)/arch/arm/mach-northstar/include -I$(KERNDIR)/arch/arm/plat-iproc/include

MODULE_CFLAGS += -I$(KERNEL_SOURCE)/include
MODULE_CFLAGS += -I$(KERNEL_SOURCE)/arch/arm/include
MODULE_CFLAGS += -I$(KERNEL_SOURCE)/arch/arm
MODULE_CFLAGS += -I$(KERNEL_SOURCE)/arch/arm/include/asm

MODULE_CFLAGS+=-I$(BROADCOM_SDK)/include

MODULE_CFLAGS+=-I$(BROADCOM_SDK)/src
MODULE_CFLAGS+=-DINCLUDE_L3 -DBCM_ESW_SUPPORT -DBCM_RPC_SUPPORT
MODULE_CFLAGS+= -I$(SRC_DIR)/$(DIR_NAME)
MODULE_CFLAGS+= -I$(TOP_DIR)/platform/linux
MODULE_CFLAGS+= -I./broadcom -I./broadcom/linux -I./broadcom/L2
MODULE_CFLAGS+= -I./broadcom/L3 -I./broadcom/eline -I./broadcom/MPLS
MODULE_CFLAGS+= -I./broadcom/vpls -I./broadcom/ptp -I./broadcom/linux/L2
MODULE_CFLAGS+= -I./broadcom/linux/L3 -I./broadcom/linux/L3/native

# MODPOST 
MODPOST = $(KERNEL_OUT)/scripts/mod/modpost
MODPOST_FLAGS = -w -m -i

MODNAME = -D"KBUILD_MODNAME=KBUILD_STR(hsl_module)"
MODPOST_DEFINES = -D"KBUILD_STR(s)=\#s" $(MODNAME)

EXTRA_LDFLAGS += -r
MAKE_SINGLE_DEPS= $(CC) -M $(MODULE_CFLAGS)
MAKE_SINGLE_FILE= $(CC) -c $(MODULE_CFLAGS)

#
# Lists of input files (to handle conditional compilation of files)
#
ifeq ($(ADD_HARDWARE),yes)
DIR_SRCS=
#
# Conditional additions to above
#
endif

MODULE_CFLAGS+=-I$(SRC_DIR)/libhsl
MODULE_CFLAGS+=-I$(SRC_DIR)/libhsl/common

#
# Multicast/Igmp snooping 
#
ifeq ($(ENABLE_MCAST_IPV4),yes)
  MODULE_CFLAGS+=-I$(SRC_DIR)/libhsl/ipmc
else
  ifeq ($(ENABLE_MCAST_IPV6),yes)
    MODULE_CFLAGS+=-I$(SRC_DIR)/libhsl/ipmc
  else
    ifeq ($(ENABLE_IGMP_SNOOP),yes)
       MODULE_CFLAGS+=-I$(SRC_DIR)/libhsl/ipmc
     endif
  endif
endif

#
# OS & Stack 
#
# VxWorks-Windnet
ifeq ($(BLD_NAME),vxworks)
  HSL_OS_NAME=vxworks
  ifeq ($(PNE_VERSION),PNE_2_2)
     MODULE_CFLAGS+=-D_KERNEL
     MODULE_CFLAGS+=-D_WRS_KERNEL
     HSL_STACK_NAME=pne_2_2
  else
     HSL_STACK_NAME=windnet
  endif
endif
ifeq ($(BLD_NAME),vxworks_ipnet2)
  HSL_OS_NAME=vxworks
  HSL_STACK_NAME=ipnet2
endif
ifeq ($(BLD_NAME),linux)
  HSL_OS_NAME=linux
  ifeq ($(ENABLE_IPNET),yes)
    HSL_STACK_NAME=ipnet2
  else
    HSL_STACK_NAME=native
  endif
endif
 
#
# Hardware specific initialization.
#

ifeq ($(ADD_HARDWARE),yes)
#
# Harware - OS - Stack 
#
  DIR_ADDS+=$(HARDWARE_NAME)
  MODULE_CFLAGS+=-I$(SRC_DIR)/hal
  MODULE_CFLAGS+=-I$(SRC_DIR)/hal/hsl
  MODULE_CFLAGS+=-I$(SRC_DIR)/hsl/$(HARDWARE_NAME)
  DIR_ADDS+=$(HARDWARE_NAME)/$(HSL_OS_NAME)
  MODULE_CFLAGS+=-I$(SRC_DIR)/hsl/$(HARDWARE_NAME)/$(HSL_OS_NAME)
ifeq ($(BLD_NAME),vxworks_ipnet2)
  DIR_ADDS+=$(HARDWARE_NAME)/$(HSL_OS_NAME)/$(HSL_STACK_NAME)
  MODULE_CFLAGS+=-I$(SRC_DIR)/hsl/$(HARDWARE_NAME)/$(HSL_OS_NAME)/$(HSL_STACK_NAME)
endif
#
# Layer 2 
#
ifeq ($(ENABLE_L2),yes)
  DIR_ADDS+=$(HARDWARE_NAME)/L2 

ifeq ($(BLD_NAME),vxworks)
  ifeq ($(PNE_VERSION),PNE_2_2)
       DIR_ADDS+=$(HARDWARE_NAME)/$(HSL_OS_NAME)/L2_22
       MODULE_CFLAGS+=-I$(SRC_DIR)/hsl/$(HARDWARE_NAME)/$(HSL_OS_NAME)/L2_22
  else # ! PNE_2_2
       DIR_ADDS+=$(HARDWARE_NAME)/$(HSL_OS_NAME)/L2_20
       MODULE_CFLAGS+=-I$(SRC_DIR)/hsl/$(HARDWARE_NAME)/$(HSL_OS_NAME)/L2_20
  endif
endif # vxworks  

ifeq ($(BLD_NAME),vxworks_ipnet2)
  ifeq ($(PNE_VERSION),PNE_2_2)
       DIR_ADDS+=$(HARDWARE_NAME)/$(HSL_OS_NAME)/L2_22
       MODULE_CFLAGS+=-I$(SRC_DIR)/hsl/$(HARDWARE_NAME)/$(HSL_OS_NAME)/L2_22
  else # ! PNE_2_2
       DIR_ADDS+=$(HARDWARE_NAME)/$(HSL_OS_NAME)/L2_20
       MODULE_CFLAGS+=-I$(SRC_DIR)/hsl/$(HARDWARE_NAME)/$(HSL_OS_NAME)/L2_20
  endif
else # linux
  DIR_ADDS+=$(HARDWARE_NAME)/$(HSL_OS_NAME)/L2
  MODULE_CFLAGS+=-I$(SRC_DIR)/hsl/$(HARDWARE_NAME)/$(HSL_OS_NAME)/L2
endif # vxworks_ipnet2

  MODULE_CFLAGS+=-I$(SRC_DIR)/hal/L2
  MODULE_CFLAGS+=-I$(SRC_DIR)/libhsl/L2
  MODULE_CFLAGS+=-I$(SRC_DIR)/hsl/$(HARDWARE_NAME)/L2
endif
#
# Layer 3 
#
ifeq ($(ENABLE_L3),yes)
  DIR_ADDS+=$(HARDWARE_NAME)/L3 
  DIR_ADDS+=$(HARDWARE_NAME)/$(HSL_OS_NAME)/L3 
  DIR_ADDS+=$(HARDWARE_NAME)/$(HSL_OS_NAME)/L3/$(HSL_STACK_NAME)
  MODULE_CFLAGS+=-I$(SRC_DIR)/hal/L3
  MODULE_CFLAGS+=-I$(SRC_DIR)/libhsl/L3
  MODULE_CFLAGS+=-I$(SRC_DIR)/libhsl/L3
  MODULE_CFLAGS+=-I$(SRC_DIR)/hsl/$(HARDWARE_NAME)/L3
  MODULE_CFLAGS+=-I$(SRC_DIR)/hsl/$(HARDWARE_NAME)/$(HSL_OS_NAME)/L3
  MODULE_CFLAGS+=-I$(SRC_DIR)/hsl/$(HARDWARE_NAME)/$(HSL_OS_NAME)/L3/$(HSL_STACK_NAME)
  MODULE_CFLAGS+=-DINCLUDE_L3
endif

ifeq ($(ENABLE_MPLS),yes)
  DIR_ADDS+=$(HARDWARE_NAME)/MPLS 
  MODULE_CFLAGS+=-I$(SRC_DIR)/hal/MPLS
  MODULE_CFLAGS+=-I$(SRC_DIR)/libhsl/MPLS
  MODULE_CFLAGS+=-I$(SRC_DIR)/hsl/$(HARDWARE_NAME)/MPLS
endif

  DIR_ADDS+=$(HARDWARE_NAME)/eline 
  DIR_ADDS+=$(HARDWARE_NAME)/vpls  
  DIR_ADDS+=$(HARDWARE_NAME)/ptp  
  MODULE_CFLAGS+=-I$(SRC_DIR)/hsl/$(HARDWARE_NAME)/eline
  MODULE_CFLAGS+=-I$(SRC_DIR)/hsl/$(HARDWARE_NAME)/vpls
  MODULE_CFLAGS+=-I$(SRC_DIR)/hsl/$(HARDWARE_NAME)/ptp

# SUB_DIR := $(shell find . -maxdepth 2 -type d)
# SUB_DIR := $(basename $(patsubst ./%, %, $(SUB_DIR))) DIR_ADDS+= $(SUB_DIR)
# MODULE_CFLAGS+= $(patsubst %, -I$(SRC_DIR)/pac/%, $(SUB_DIR))

endif


